package ca.concordia.encs.distributed.corba.model;


/**
* ca/concordia/encs/distributed/corba/model/_ClinicServiceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ClinicServices.idl
* Monday, July 4, 2016 11:59:07 AM CDT
*/

public class _ClinicServiceStub extends org.omg.CORBA.portable.ObjectImpl implements ca.concordia.encs.distributed.corba.model.ClinicService
{

  public ca.concordia.encs.distributed.corba.model.Message createDRecord (String managerID, String firstName, String lastName, String address, String phone, String specialization)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createDRecord", true);
                $out.write_string (managerID);
                $out.write_string (firstName);
                $out.write_string (lastName);
                $out.write_string (address);
                $out.write_string (phone);
                $out.write_string (specialization);
                $in = _invoke ($out);
                ca.concordia.encs.distributed.corba.model.Message $result = ca.concordia.encs.distributed.corba.model.MessageHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createDRecord (managerID, firstName, lastName, address, phone, specialization        );
            } finally {
                _releaseReply ($in);
            }
  } // createDRecord

  public ca.concordia.encs.distributed.corba.model.Message createNRecord (String managerID, String firstName, String lastName, String designation, String status, int statusDate)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createNRecord", true);
                $out.write_string (managerID);
                $out.write_string (firstName);
                $out.write_string (lastName);
                $out.write_string (designation);
                $out.write_string (status);
                $out.write_long (statusDate);
                $in = _invoke ($out);
                ca.concordia.encs.distributed.corba.model.Message $result = ca.concordia.encs.distributed.corba.model.MessageHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createNRecord (managerID, firstName, lastName, designation, status, statusDate        );
            } finally {
                _releaseReply ($in);
            }
  } // createNRecord

  public ca.concordia.encs.distributed.corba.model.Message getRecordCounts (String managerID, String recordType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getRecordCounts", true);
                $out.write_string (managerID);
                $out.write_string (recordType);
                $in = _invoke ($out);
                ca.concordia.encs.distributed.corba.model.Message $result = ca.concordia.encs.distributed.corba.model.MessageHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getRecordCounts (managerID, recordType        );
            } finally {
                _releaseReply ($in);
            }
  } // getRecordCounts

  public ca.concordia.encs.distributed.corba.model.Message editRecord (String managerID, String recordID, String fieldName, String newValue)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("editRecord", true);
                $out.write_string (managerID);
                $out.write_string (recordID);
                $out.write_string (fieldName);
                $out.write_string (newValue);
                $in = _invoke ($out);
                ca.concordia.encs.distributed.corba.model.Message $result = ca.concordia.encs.distributed.corba.model.MessageHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return editRecord (managerID, recordID, fieldName, newValue        );
            } finally {
                _releaseReply ($in);
            }
  } // editRecord

  public ca.concordia.encs.distributed.corba.model.Message transferRecord (String managerID, String recordID, String remoteClinicServerName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("transferRecord", true);
                $out.write_string (managerID);
                $out.write_string (recordID);
                $out.write_string (remoteClinicServerName);
                $in = _invoke ($out);
                ca.concordia.encs.distributed.corba.model.Message $result = ca.concordia.encs.distributed.corba.model.MessageHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return transferRecord (managerID, recordID, remoteClinicServerName        );
            } finally {
                _releaseReply ($in);
            }
  } // transferRecord

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:interop/ClinicService:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ClinicServiceStub
